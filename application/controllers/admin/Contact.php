<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Contact extends CI_Controller{
    function __construct()
    {
        parent::__construct();        
        $this->load->model('general_model');        
    } 

    /*
     * Listing of users
     */
    public function index()
	{			        
        $this->user_library->checking_page_access('contact',"contact","view");   
        $where_kontak['organization_id'] = 1;                   
        $data['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            
        $data['list_address'] = $this->general_model->get_info("*", "organization_address", $where_kontak)->result();                            
		$this->load->view('backend/kontak_kami/view_kontak_kami',$data);
	}

	public function edit()
	{			
        $this->user_library->checking_page_access('contact',"contact","edit");   
        $where_kontak['organization_id'] = 1;   
        $data['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            
        $data['list_address'] = $this->general_model->get_info("*", "organization_address", $where_kontak)->result();                            
		$this->load->view('backend/kontak_kami/edit_kontak_kami',$data);
	}

	public function doedit()
	{	        
        $this->user_library->checking_page_access('contact',"contact","edit");   
        date_default_timezone_set('Asia/Jakarta');		
        
        $where_kontak['organization_id'] = 1;   
        $last_kontak = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            
        
		if(isset($_POST) && count($_POST) > 0){
            
            $this->load->library('upload');

            $params = array(
                'organization_name' => $this->input->post('organization_name'),   
                'email' => $this->input->post('email'),             
                'phone_number' => $this->input->post('phone_number'),             
                'description' => $this->input->post('description'),             
                'tagline' => $this->input->post('tagline'),             
                'updated_by' => $this->session->userdata('user_id'),             
                'updated_at' => date('Y-m-d H:i:s'),                 
            );

            $deleteFile = array();
			
			if(isset($_FILES['logo']) && $this->input->post('isLogoImage') == 1){
			$logo = $_FILES['logo']['name'];   
			if($logo != null && $this->input->post('isLogoImage') == 1){
				$series_name = 'organization-logo-'.date('dmYHis');
				$config['upload_path']          = './assets/images/tmp/';
            $config['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
            $config['max_size']             = 0;// = MB
            $config['max_width']            = 2000;
			$config['max_height']           = 2000;		
			$config['file_name'] 			= $series_name; 

			if ($this->upload->initialize($config) && ! $this->upload->do_upload('logo'))
            {   
				$this->session->set_flashdata('error',$this->upload->display_errors());  
				return $this->load->view('backend/contact/edit', $data);										              															
			}else{					
				$upload_logo = $this->upload->data();	

				$this->load->library('Compress');
				$compress0 = new Compress();		
		
		$compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_logo['file_name'];
		$compress0->new_name_image = $upload_logo['file_name'];
		$compress0->quality = 60;
		$compress0->destination = base_url().'assets/images/organization/';

		$compress0->compress_image();
		
		if(file_exists(getcwd().'/assets/images/tmp/'.$upload_logo['file_name'])){
			unlink(getcwd().'/assets/images/tmp/'.$upload_logo['file_name']);						
		}		
                $params['logo'] = $upload_logo['file_name'];
                array_push($deleteFile, $last_kontak->logo);
			}												
			}
        }else if($this->input->post('isLogoImage') == 0 && $this->input->post('logoBase64') != ""){
            $dataLogo = $this->input->post('logoBase64');

            list($type, $dataLogo) = explode(';', $dataLogo);
        list(, $dataLogo)      = explode(',', $dataLogo);
     
        $dataLogo = base64_decode($dataLogo);
        $imageName = 'organization-logo-'.date('dmYHis').'.png';
        file_put_contents('assets/images/tmp/'.$imageName, $dataLogo);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/organization/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}

        $params['logo'] = $imageName;
        array_push($deleteFile, $last_kontak->logo);
        }

        if(isset($_FILES['icon_logo']) && $this->input->post('isIconLogoImage') == 1){
			$icon_logo = $_FILES['icon_logo']['name'];   
			if($icon_logo != null && $this->input->post('isIconLogoImage') == 1){
				$series_name = 'organization-iconLogo-'.date('dmYHis');
				$config['upload_path']          = './assets/images/tmp/';
            $config['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
            $config['max_size']             = 0;// = MB
            $config['max_width']            = 2000;
			$config['max_height']           = 2000;		
			$config['file_name'] 			= $series_name; 

			if ($this->upload->initialize($config) && ! $this->upload->do_upload('icon_logo'))
            {   
				$this->session->set_flashdata('error',$this->upload->display_errors());  
				return $this->load->view('backend/contact/edit', $data);										              															
			}else{					
				$upload_icon_logo = $this->upload->data();	

				$this->load->library('Compress');
				$compress0 = new Compress();		
		
		$compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_icon_logo['file_name'];
		$compress0->new_name_image = $upload_icon_logo['file_name'];
		$compress0->quality = 60;
		$compress0->destination = base_url().'assets/images/organization/';

		$compress0->compress_image();
		
		if(file_exists(getcwd().'/assets/images/tmp/'.$upload_icon_logo['file_name'])){
			unlink(getcwd().'/assets/images/tmp/'.$upload_icon_logo['file_name']);						
		}		
                $params['icon_logo'] = $upload_icon_logo['file_name'];

                array_push($deleteFile, $last_kontak->icon_logo);
			}												
			}
        }else if($this->input->post('isIconLogoImage') == 0 && $this->input->post('iconLogoBase64') != ""){
            $dataIconLogo = $this->input->post('iconLogoBase64');

            list($type, $dataIconLogo) = explode(';', $dataIconLogo);
        list(, $dataIconLogo)      = explode(',', $dataIconLogo);
     
        $dataIconLogo = base64_decode($dataIconLogo);
        $imageName = 'organization-iconLogo-'.date('dmYHis').'.png';
        
        file_put_contents('assets/images/tmp/'.$imageName, $dataIconLogo);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/organization/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}

        $params['icon_logo'] = $imageName;

        array_push($deleteFile, $last_kontak->icon_logo);
        }
        
            $this->db->trans_start(); 			
            $this->db->delete('organization_address',array('organization_id'=>1));            
            
            if($this->input->post('address') != "" && $this->input->post('address') != null 
            && count($this->input->post('address')) > 0){                
                if(is_array($this->input->post('address'))){
                    foreach($this->input->post('address') as $value){
                        $add_address = array(
                            'organization_id' => 1,   
                            'address' => $value,                             
                        );           
                        $this->db->insert('organization_address',$add_address);  
                    }
                }
            }            
            
            $where['organization_id'] = 1;

            $this->db->update('organization',$params,$where);                      

            $this->db->trans_complete();          

            foreach($deleteFile as $delete){
                if(file_exists(getcwd().'/assets/images/organization/'.$delete)){
                    unlink(getcwd().'/assets/images/organization/'.$delete);						
                }		
            }

            $this->session->set_flashdata('success','Edit Kontak Success');                
            redirect('admin/contact/');
        }
        else{
          $this->session->set_flashdata('error','There are no post from previous action');
          redirect('admin/contact/edit');
        }
	}
    
}

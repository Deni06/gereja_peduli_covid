<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Article extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        // if($this->session->userdata('group') !=  '1')
        // {
        //     $this->session->set_flashdata('error','You have no access to that page.');
        //     redirect('login');  
        // }        
        $this->load->model('general_model');        
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $this->user_library->checking_page_access('article',"article","view");   
        
        $join = array();
        $join[0]['table'] = "users u";
        $join[0]['connection'] = "a.created_by = u.usr_id";
        $join[0]['type'] = "left";        

        $join[1]['table'] = "users u2";
        $join[1]['connection'] = "a.reviewed_by = u2.usr_id";
        $join[1]['type'] = "left";        

        $sorting_article['field'] = "a.created_at";
        $sorting_article['sort'] = "desc";
        
        $data['list_article'] = $this->general_model->get_info("a.*, u.usr_fullname as created_user, 
        (CASE WHEN a.type_article = 1 THEN 'Berita' WHEN a.type_article = 2 THEN 'Artikel' ELSE 
        'Serba - Serbi' END) as type_article_name, u2.usr_fullname as reviewed_user, 
        (CASE WHEN a.media_type = 1 THEN 'Image' ELSE 'Video' END) as media_type_name", "article a", 
        array(), $sorting_article, $join);

        $where_kontak['organization_id'] = 1;                   
        $data['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            

        $this->load->view('backend/article/master_article',$data);
    }
    
    function add()
    {   
        $this->user_library->checking_page_access('article',"article","add");   
        date_default_timezone_set('Asia/Jakarta');		

        $where_kontak['organization_id'] = 1;                   
            $data['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            
            $data['tags'] = $this->general_model->get_info("tags_name", "tags");                                        

        if(isset($_POST) && count($_POST) > 0)     
        {               
            $this->load->library('upload');

            $params = array(												
				'title' => $this->input->post('title'),
				'description' => $this->input->post('article_content'),				
				'type_article' => $this->input->post('article_type'),
                'media_type' => $this->input->post('rdo'),	
                'created_by' => $this->session->userdata('user_id'),             
                'created_at' => date('Y-m-d H:i:s'),                
                'caption' => $this->input->post('caption'),	 			
            );                        

            $params_gallery = array();

            $folder = "berita";

            if($this->input->post('article_type') == 2){
                $folder = "article";
            }else if($this->input->post('article_type') == 3){
                $folder = "serba_serbi";
            }                 
            
            if(isset($_FILES['image'])){
                $logo = $_FILES['image']['name'];   
                if($logo != null){
                    $series_name = 'imagefull-'.date('dmYHis');
                    $config['upload_path']          = './assets/images/tmp/';
                $config['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
                $config['max_size']             = 0;// = MB
                $config['max_width']            = 2000;
                $config['max_height']           = 2000;		
                $config['file_name'] 			= $series_name; 
    
                if ($this->upload->initialize($config) && ! $this->upload->do_upload('image'))
                {   
                    $this->session->set_flashdata('error',$this->upload->display_errors());  
                    return $this->load->view('backend/article/add_article', $data);										              															
                }else{					
                    $upload_image = $this->upload->data();	
    
                    $this->load->library('Compress');
                    $compress0 = new Compress();		
            
            $compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_image['file_name'];
            $compress0->new_name_image = $upload_image['file_name'];
            $compress0->quality = 60;
            $compress0->destination = base_url().'assets/images/'.$folder.'/';
    
            $compress0->compress_image();
            
            if(file_exists(getcwd().'/assets/images/tmp/'.$upload_image['file_name'])){
                unlink(getcwd().'/assets/images/tmp/'.$upload_image['file_name']);						
            }		
                    $params['real_image'] = $folder.'/'.$upload_image['file_name'];
                }												
                }
            }

            if(isset($_FILES['image']) && $this->input->post('isImage') == 1){
                $logo = $_FILES['image']['name'];   
                if($logo != null && $this->input->post('isImage') == 1){
                    $params['image'] = $params['real_image'];
                }
            }else if($this->input->post('isImage') == 0 && $this->input->post('imageBase64') != ""){
                $dataImage = $this->input->post('imageBase64');
    
                list($type, $dataImage) = explode(';', $dataImage);
            list(, $dataImage)      = explode(',', $dataImage);
         
            $dataImage = base64_decode($dataImage);
            $imageName = 'image-'.date('dmYHis').'.png';            

            file_put_contents('assets/images/tmp/'.$imageName, $dataImage);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
    
            $params['image'] = $folder.'/'.$imageName;
            }            

            if(isset($_FILES['image']) && $this->input->post('isIconImage') == 1){
                $icon = $_FILES['image']['name'];   
                if($icon != null && $this->input->post('isIconImage') == 1){
                    $params['image_icon'] = $params['real_image'];												
                }
            }else if($this->input->post('isIconImage') == 0 && $this->input->post('iconBase64') != ""){
                $dataIcon = $this->input->post('iconBase64');
    
                list($type, $dataIcon) = explode(';', $dataIcon);
            list(, $dataIcon)      = explode(',', $dataIcon);
         
            $dataIcon = base64_decode($dataIcon);
            $imageName = 'icon-'.date('dmYHis').'.png';            

            file_put_contents('assets/images/tmp/'.$imageName, $dataIcon);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
    
            $params['image_icon'] = $folder.'/'.$imageName;
            }            

            $list_tags = array();
            $list_tags_id = array();
            if($this->input->post('tags') != null && $this->input->post('tags') != ""){
                $list_tags = preg_split('@,@', $this->input->post('tags'), NULL, PREG_SPLIT_NO_EMPTY);                

                if(count($list_tags) > 0){
                    foreach($list_tags as $tags){
                        $like = array();
                        $like[0]['field'] = 'tags_name';
                        $like[0]['value'] = $tags;
                        $get_tags = $this->general_model->get_info("tags_id", "tags", array(),array(), array(), array(),$like,array(),1);    

                        if($get_tags != FALSE){
                            array_push($list_tags_id, $get_tags->row()->tags_id);
                        }else{
                            $params_tags['tags_name'] = $tags;                        
                            $this->db->insert('tags',$params_tags);
                            
                            if(($this->db->affected_rows() > 0))
        {
            $tags_id = $this->db->insert_id();
            array_push($list_tags_id, $tags_id);
        }
                        }
                    }
                }
            }            

            $this->db->trans_start();

            $this->db->insert('article',$params);

            if(($this->db->affected_rows() > 0))
        {
            $article_id = $this->db->insert_id();

            if(count($list_tags_id) > 0){
                $params_article_tags['article_id'] = $article_id;

                foreach($list_tags_id as $id_tags){
                    $params_article_tags['tags_id'] = $id_tags;                        
                    $this->db->insert('article_tags',$params_article_tags);
                }                                        
            }

            if($this->input->post('rdo') == 2){                
                if(isset($_FILES['video'])){
                    $video = $_FILES['video']['name'];   
                    if($video != null){
                        $series_name = 'video-'.$article_id.'-'.date('dmYHis');
                        $config2['upload_path']          = './assets/images/'. $folder.'/';
                    $config2['allowed_types']        = 'mp4|avi|3gp|mkv|wmv';            
                    $config2['overwrite']			= TRUE;
                    $config2['remove_spaces']		= FALSE;
                    $config2['file_name'] 			= $series_name; 
        
                    if ($this->upload->initialize($config2) && ! $this->upload->do_upload('video'))
                    {                 				                                    
                        $this->session->set_flashdata('error',$this->upload->display_errors());  
                        return $this->load->view('backend/article/add_article', $data);										
                    }else{	                                                
                    $upload_video = $this->upload->data();	                    
                        $params_gallery['url'] = $folder.'/'.$upload_video['file_name'];
                        $params_gallery['caption'] = $this->input->post('caption_video');
                        $params_gallery['article_id'] = $article_id;

                        $this->db->insert('article_gallery',$params_gallery);
                    }												
                    }
                }
            }else{
                if($this->input->post('index_gallery') != null && $this->input->post('index_gallery') != ""){
                    $list_gallery = preg_split('@,@', $this->input->post('index_gallery'), NULL, PREG_SPLIT_NO_EMPTY);                
    
                    if(count($list_gallery) > 0){
                        foreach($list_gallery as $gallery){
                            $params_gallery['caption'] = $this->input->post('gallery_caption'.$gallery);
                            $params_gallery['article_id'] = $article_id;

                            if(isset($_FILES['gallery'.$gallery])){                                
                                $gallery_file = $_FILES['gallery'.$gallery]['name'];   
                                if($gallery_file != null){
                                    $series_name = 'galleryfull-'.$article_id.'-'.$gallery.date('dmYHis');
                                    $config3['upload_path']          = './assets/images/tmp/';
                                $config3['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
                                $config3['max_size']             = 0;// = MB
                                $config3['max_width']            = 2000;
                                $config3['max_height']           = 2000;		
                                $config3['file_name'] 			= $series_name; 
                    
                                if ($this->upload->initialize($config3) && ! $this->upload->do_upload('gallery'.$gallery))
                                {   
                                    $this->session->set_flashdata('error',$this->upload->display_errors());  
                                    return $this->load->view('backend/article/add_article', $data);										              															
                                }else{					
                                    $upload_gallery = $this->upload->data();	
                    
                                    $this->load->library('Compress');
                                    $compress0 = new Compress();		
                            
                            $compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'];
                            $compress0->new_name_image = $upload_gallery['file_name'];
                            $compress0->quality = 60;
                            $compress0->destination = base_url().'assets/images/'.$folder.'/';
                    
                            $compress0->compress_image();
                            
                            if(file_exists(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'])){
                                unlink(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name']);						
                            }		
                                    $params_gallery['real_image_url'] = $folder.'/'.$upload_gallery['file_name'];
                                }												
                                }
                            }

                            if(isset($_FILES['gallery'.$gallery]) && $this->input->post('isGalleryImage'.$gallery) == 1){
                                $gallery_file = $_FILES['gallery'.$gallery]['name'];   
                                if($gallery_file != null && $this->input->post('isGalleryImage'.$gallery) == 1){
                                    $params_gallery['url'] = $params_gallery['real_image_url'];										
                                }
                            }else if($this->input->post('isGalleryImage'.$gallery) == 0 && $this->input->post('galleryBase64'.$gallery) != ""){
                                $dataGallery = $this->input->post('galleryBase64'.$gallery);
                    
                                list($type, $dataGallery) = explode(';', $dataGallery);
                            list(, $dataGallery)      = explode(',', $dataGallery);
                         
                            $dataGallery = base64_decode($dataGallery);
                            $imageName = 'gallery-'.$article_id.'-'.$gallery.date('dmYHis').'.png';                            

                            file_put_contents('assets/images/tmp/'.$imageName, $dataGallery);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
                    
                            $params_gallery['url'] = $folder.'/'.$imageName;
                            }

                            $this->db->insert('article_gallery',$params_gallery);
                        }
                    }
                }
            }
            
        }            

            $this->db->trans_complete();
                        
            $this->session->set_flashdata('success','Add Article Success');    
            redirect('admin/article');
        }
        else
        {                                    
            $this->load->view('backend/article/add_article', $data);
        }
    }  

    /*
     * Editing a user
     */
    function edit($article_id)
    {   
        $this->user_library->checking_page_access('article',"article","edit");   
        date_default_timezone_set('Asia/Jakarta');
        
        $where_organization['organization_id'] = 1;    
		$where_article['article_id'] = $article_id;		
		$where_article_tags['at.article_id'] = $article_id;					
        
        $join_tags = array();
		$join_tags[0]['table'] = "tags t";
        $join_tags[0]['connection'] = "at.tags_id = t.tags_id";
        $join_tags[0]['type'] = "left";        

		$data['kontak'] = $this->general_model->get_info("*", "organization", $where_organization)->row();        		
		
        $data['article'] = $this->general_model->get_info("a.*", "article a", $where_article, array());		
        
        $data['list_gallery'] = $this->general_model->get_info("*", "article_gallery", $where_article);		

        $data['list_tags_article'] = $this->general_model->get_info("at.tags_id, t.tags_name", "article_tags at", $where_article_tags, array(), $join_tags)->result();

        $data['tags'] = $this->general_model->get_info("tags_name", "tags");                                        
        
        if($data['article'] != FALSE)
        {        
            if($this->session->userdata('user_id') != $data['article']->row()->created_by){
                $this->session->set_flashdata('error','You do not have access to edit the article');  
                return redirect('admin/article');
            }else if($data['article']->row()->status_review == 1){
                $this->session->set_flashdata('error','You cannot edit articles that have been approved');  
                return redirect('admin/article');
            }else if(isset($_POST) && count($_POST) > 0)     
            {   
                $this->load->library('upload');                

            $params = array(												
				'title' => $this->input->post('title'),
				'description' => $this->input->post('article_content'),				
				'type_article' => $this->input->post('article_type'),
                'media_type' => $this->input->post('rdo'),	
                'updated_by' => $this->session->userdata('user_id'),             
                'updated_at' => date('Y-m-d H:i:s'),                
                'caption' => $this->input->post('caption'),	 			
                'status_review' => 0,	 			
            );                                    

            $params_gallery = array();

            $deleteFile = array();

            $folder = "berita";

            if($this->input->post('article_type') == 2){
                $folder = "article";
            }else if($this->input->post('article_type') == 3){
                $folder = "serba_serbi";
            }                        

            if($this->input->post('rdo') != $data['article']->row()->media_type){                
                if($data['list_gallery'] != FALSE){
                    foreach($data['list_gallery']->result() as $gallery){
                        array_push($deleteFile, $gallery->url);
                    }
                }
            }else{
                $list_gallery_delete = array();            
            if($this->input->post('index_gallery_delete') != null && $this->input->post('index_gallery_delete') != ""){                
                $list_gallery_delete = preg_split('@,@', $this->input->post('index_gallery_delete'), NULL, PREG_SPLIT_NO_EMPTY);                

                if(count($list_gallery_delete) > 0){
                    $where_in_gallery = array();
                $where_in_gallery['field'] = "article_gallery_id";
                $where_in_gallery['value'] = $list_gallery_delete;
                $gallery_delete = $this->general_model->get_info("url, real_image_url", "article_gallery", array(), array(), array(),array(),array(),$where_in_gallery);
                if ($gallery_delete != FALSE) {
                    foreach($gallery_delete->result() as $delete_id){
                        array_push($deleteFile, $delete_id->url);
                        array_push($deleteFile, $delete_id->real_image_url);
                    }                    
              }
                }
            }
            } 
            
            if(isset($_FILES['image'])){
                $logo = $_FILES['image']['name'];   
                if($logo != null){
                    $series_name = 'imagefull-'.date('dmYHis');
                    $config['upload_path']          = './assets/images/tmp/';
                $config['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
                $config['max_size']             = 0;// = MB
                $config['max_width']            = 2000;
                $config['max_height']           = 2000;		
                $config['file_name'] 			= $series_name; 
    
                if ($this->upload->initialize($config) && ! $this->upload->do_upload('image'))
                {   
                    $this->session->set_flashdata('error',$this->upload->display_errors());  
                    return $this->load->view('backend/article/edit_article', $data);										              															
                }else{					
                    $upload_image = $this->upload->data();	
    
                    $this->load->library('Compress');
                    $compress0 = new Compress();		
            
            $compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_image['file_name'];
            $compress0->new_name_image = $upload_image['file_name'];
            $compress0->quality = 60;
            $compress0->destination = base_url().'assets/images/'.$folder.'/';
    
            $compress0->compress_image();
            
            if(file_exists(getcwd().'/assets/images/tmp/'.$upload_image['file_name'])){
                unlink(getcwd().'/assets/images/tmp/'.$upload_image['file_name']);						
            }		
                    $params['real_image'] = $folder.'/'.$upload_image['file_name'];

                    array_push($deleteFile, $data['article']->row()->real_image);
                }												
                }
            }

            if(isset($_FILES['image']) && $this->input->post('isImage') == 1){
                $logo = $_FILES['image']['name'];   
                if($logo != null && $this->input->post('isImage') == 1){
                    $params['image'] = $params['real_image'];

                    array_push($deleteFile, $data['article']->row()->image);
                }
            }else if($this->input->post('isImage') == 0 && $this->input->post('imageBase64') != ""){
                $dataImage = $this->input->post('imageBase64');
    
                list($type, $dataImage) = explode(';', $dataImage);
            list(, $dataImage)      = explode(',', $dataImage);
         
            $dataImage = base64_decode($dataImage);
            $imageName = 'image-'.date('dmYHis').'.png';            

            file_put_contents('assets/images/tmp/'.$imageName, $dataImage);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
    
            $params['image'] = $folder.'/'.$imageName;

            if($data['article']->row()->image != $data['article']->row()->real_image){
                array_push($deleteFile, $data['article']->row()->image);
            }                            

            }            

            if(isset($_FILES['image']) && $this->input->post('isIconImage') == 1){
                $icon = $_FILES['image']['name'];   
                if($icon != null && $this->input->post('isIconImage') == 1){
                    $params['image_icon'] = $params['real_image'];

                    array_push($deleteFile, $data['article']->row()->image_icon);												
                }
            }else if($this->input->post('isIconImage') == 0 && $this->input->post('iconBase64') != ""){
                $dataIcon = $this->input->post('iconBase64');
    
                list($type, $dataIcon) = explode(';', $dataIcon);
            list(, $dataIcon)      = explode(',', $dataIcon);
         
            $dataIcon = base64_decode($dataIcon);
            $imageName = 'icon-'.date('dmYHis').'.png';            

            file_put_contents('assets/images/tmp/'.$imageName, $dataIcon);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
    
            $params['image_icon'] = $folder.'/'.$imageName;

            if($data['article']->row()->image_icon != $data['article']->row()->real_image){
                array_push($deleteFile, $data['article']->row()->image_icon);
            }                            
            
            }            

            $list_tags = array();
            $list_tags_id = array();
            if($this->input->post('tags') != null && $this->input->post('tags') != ""){
                $list_tags = preg_split('@,@', $this->input->post('tags'), NULL, PREG_SPLIT_NO_EMPTY);                

                if(count($list_tags) > 0){
                    foreach($list_tags as $tags){
                        $like = array();
                        $like[0]['field'] = 'tags_name';
                        $like[0]['value'] = $tags;
                        $get_tags = $this->general_model->get_info("tags_id", "tags", array(),array(), array(), array(),$like,array(),1);    

                        if($get_tags != FALSE){
                            array_push($list_tags_id, $get_tags->row()->tags_id);
                        }else{
                            $params_tags['tags_name'] = $tags;                        
                            $this->db->insert('tags',$params_tags);
                            
                            if(($this->db->affected_rows() > 0))
        {
            $tags_id = $this->db->insert_id();
            array_push($list_tags_id, $tags_id);
        }
                        }
                    }
                }
            }            

            $this->db->trans_start();            
        
            $this->db->delete('article_tags',$where_article);      

            if($this->input->post('rdo') != $data['article']->row()->media_type){
                $this->db->delete('article_gallery',$where_article);      
            }else{
                if($this->input->post('index_gallery_delete') != null && $this->input->post('index_gallery_delete') != ""){                
                    $sql = "delete from article_gallery where article_gallery_id in (".$this->input->post('index_gallery_delete').") ";
                    $this->db->query($sql);                    
                }               
            }

            $this->db->update('article',$params, $where_article);

            if(($this->db->affected_rows() > 0))
        {            
            if(count($list_tags_id) > 0){
                $params_article_tags['article_id'] = $article_id;

                foreach($list_tags_id as $id_tags){
                    $params_article_tags['tags_id'] = $id_tags;                        
                    $this->db->insert('article_tags',$params_article_tags);
                }                                        
            }

            if($this->input->post('rdo') == 2){                
                if(isset($_FILES['video'])){
                    $video = $_FILES['video']['name'];   
                    if($video != null){
                        $series_name = 'video-'.$article_id.'-'.date('dmYHis');
                        $config2['upload_path']          = './assets/images/'. $folder.'/';
                    $config2['allowed_types']        = 'mp4|avi|3gp|mkv|wmv';            
                    $config2['overwrite']			= TRUE;
                    $config2['remove_spaces']		= FALSE;
                    $config2['file_name'] 			= $series_name; 
        
                    if ($this->upload->initialize($config2) && ! $this->upload->do_upload('video'))
                    {                 				                                    
                        $this->session->set_flashdata('error',$this->upload->display_errors());  
                        return $this->load->view('backend/article/add_article', $data);										
                    }else{	                                                
                    $upload_video = $this->upload->data();	                    

                    $this->db->delete('article_gallery',$where_article);    
                    
                        $params_gallery['url'] = $folder.'/'.$upload_video['file_name'];
                        $params_gallery['caption'] = $this->input->post('caption_video');
                        $params_gallery['article_id'] = $article_id;

                        $this->db->insert('article_gallery',$params_gallery);

                        if($data['list_gallery'] != FALSE){
                            foreach($data['list_gallery']->result() as $del_gallery){
                                array_push($deleteFile, $del_gallery->url);
                            }                            
                        }                        
                    }												
                    }
                }
            }else{
                if($this->input->post('index_gallery') != null && $this->input->post('index_gallery') != ""){
                    $list_new_gallery = preg_split('@,@', $this->input->post('index_gallery'), NULL, PREG_SPLIT_NO_EMPTY);                
    
                    if(count($list_new_gallery) > 0){
                        foreach($list_new_gallery as $gallery){
                            $params_gallery['caption'] = $this->input->post('new_gallery_caption'.$gallery);
                            $params_gallery['article_id'] = $article_id;    
                            
                            if(isset($_FILES['new_gallery'.$gallery])){
                                $gallery_file = $_FILES['new_gallery'.$gallery]['name'];   
                                if($gallery_file != null){
                                    $series_name = 'galleryfull-'.$article_id.'-'.$gallery.date('dmYHis');
                                    $config3['upload_path']          = './assets/images/tmp/';
                                $config3['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
                                $config3['max_size']             = 0;// = MB
                                $config3['max_width']            = 2000;
                                $config3['max_height']           = 2000;		
                                $config3['file_name'] 			= $series_name; 
                    
                                if ($this->upload->initialize($config3) && ! $this->upload->do_upload('new_gallery'.$gallery))
                                {   
                                    $this->session->set_flashdata('error',$this->upload->display_errors());  
                                    return $this->load->view('backend/article/edit_article', $data);										              															
                                }else{					
                                    $upload_gallery = $this->upload->data();	
                    
                                    $this->load->library('Compress');
                                    $compress0 = new Compress();		
                            
                            $compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'];
                            $compress0->new_name_image = $upload_gallery['file_name'];
                            $compress0->quality = 60;
                            $compress0->destination = base_url().'assets/images/'.$folder.'/';
                    
                            $compress0->compress_image();
                            
                            if(file_exists(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'])){
                                unlink(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name']);						
                            }		
                                    $params_gallery['real_image_url'] = $folder.'/'.$upload_gallery['file_name'];
                                }												
                                }
                            }

                            if(isset($_FILES['new_gallery'.$gallery]) && $this->input->post('isNewGalleryImage'.$gallery) == 1){
                                $gallery_file = $_FILES['new_gallery'.$gallery]['name'];   
                                if($gallery_file != null && $this->input->post('isNewGalleryImage'.$gallery) == 1){
                                    $params_gallery['url'] = $params_gallery['real_image_url'];												
                                }
                            }else if($this->input->post('isNewGalleryImage'.$gallery) == 0 && $this->input->post('newGalleryBase64'.$gallery) != ""){                                

                                $dataGallery = $this->input->post('newGalleryBase64'.$gallery);
                    
                                list($type, $dataGallery) = explode(';', $dataGallery);
                            list(, $dataGallery)      = explode(',', $dataGallery);
                         
                            $dataGallery = base64_decode($dataGallery);
                            $imageName = 'gallery-'.$article_id.'-'.$gallery.date('dmYHis').'.png';                            

                            file_put_contents('assets/images/tmp/'.$imageName, $dataGallery);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}
                    
                            $params_gallery['url'] = $folder.'/'.$imageName;
                            }

                            $this->db->insert('article_gallery',$params_gallery);
                        }
                    }
                }

                if($data['list_gallery'] != FALSE){                    
                    foreach($data['list_gallery']->result() as $last_gallery){
                        $params_update_gallery = array();
                        $params_update_gallery['caption'] = $this->input->post('gallery_caption'.$last_gallery->article_gallery_id);                            
                        $isDeleteFile = false;

                        if(isset($_FILES['gallery'.$last_gallery->article_gallery_id])){
                            $gallery_file = $_FILES['gallery'.$last_gallery->article_gallery_id]['name'];   
                            if($gallery_file != null){
                                $series_name = 'galleryfull-'.$article_id.'-'.$last_gallery->article_gallery_id.date('dmYHis');
                                $config3['upload_path']          = './assets/images/tmp/';
                            $config3['allowed_types']        = 'gif|jpg|png|tiff|pjp|pjpeg|jfif|tif|svg|bmp|jpeg|svgz|webp|ico|xbm|dib';            
                            $config3['max_size']             = 0;// = MB
                            $config3['max_width']            = 2000;
                            $config3['max_height']           = 2000;		
                            $config3['file_name'] 			= $series_name; 
                
                            if ($this->upload->initialize($config3) && ! $this->upload->do_upload('gallery'.$last_gallery->article_gallery_id))
                            {   
                                $this->session->set_flashdata('error',$this->upload->display_errors());  
                                return $this->load->view('backend/article/edit_article', $data);										              															
                            }else{					
                                $upload_gallery = $this->upload->data();	
                
                                $this->load->library('Compress');
                                $compress0 = new Compress();		
                        
                        $compress0->file_url = getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'];
                        $compress0->new_name_image = $upload_gallery['file_name'];
                        $compress0->quality = 60;
                        $compress0->destination = base_url().'assets/images/'.$folder.'/';
                
                        $compress0->compress_image();
                        
                        if(file_exists(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name'])){
                            unlink(getcwd().'/assets/images/tmp/'.$upload_gallery['file_name']);						
                        }		
                                $params_update_gallery['real_image_url'] = $folder.'/'.$upload_gallery['file_name'];                                    
                             
                                array_push($deleteFile, $last_gallery->real_image_url);
                            }												
                            }
                        }

                            if(isset($_FILES['gallery'.$last_gallery->article_gallery_id]) && $this->input->post('isGalleryImage'.$last_gallery->article_gallery_id) == 1){
                                $gallery_file = $_FILES['gallery'.$last_gallery->article_gallery_id]['name'];   
                                if($gallery_file != null && $this->input->post('isGalleryImage'.$last_gallery->article_gallery_id) == 1){
                                    $params_update_gallery['url'] = $params_update_gallery['real_image_url'];
                                    
                                    array_push($deleteFile, $last_gallery->url);												
                                }
                            }else if($this->input->post('isGalleryImage'.$last_gallery->article_gallery_id) == 0 && 
                            $this->input->post('galleryBase64'.$last_gallery->article_gallery_id) != ""){
                                $dataExistGallery = $this->input->post('galleryBase64'.$last_gallery->article_gallery_id);
                    
                                list($type, $dataExistGallery) = explode(';', $dataExistGallery);
                            list(, $dataExistGallery)      = explode(',', $dataExistGallery);
                         
                            $dataExistGallery = base64_decode($dataExistGallery);
                            $imageName = 'gallery-'.$article_id.'-'.$last_gallery->article_gallery_id.date('dmYHis').'.png';                            

                            file_put_contents('assets/images/tmp/'.$imageName, $dataExistGallery);

        $this->load->library('Compress');
        $compress0 = new Compress();		

$compress0->file_url = getcwd().'/assets/images/tmp/'.$imageName;
$compress0->new_name_image = $imageName;
$compress0->quality = 60;
$compress0->destination = base_url().'assets/images/'.$folder.'/';

$compress0->compress_image();

if(file_exists(getcwd().'/assets/images/tmp/'.$imageName)){
    unlink(getcwd().'/assets/images/tmp/'.$imageName);						
}                    
                            $params_update_gallery['url'] = $folder.'/'.$imageName;       
                                             
                            if($last_gallery->url != $last_gallery->real_image_url){
                                array_push($deleteFile, $last_gallery->url);
                            }                            
                            }
                            $where_gallery['article_gallery_id'] = $last_gallery->article_gallery_id;

                            $this->db->update('article_gallery',$params_update_gallery, $where_gallery);
                            
                    }
                }
            }
            
        }            

            $this->db->trans_complete();            

            if(count($deleteFile) > 0){
                foreach($deleteFile as $delete){
                    if(file_exists(getcwd().'/assets/images/'.$delete)){
                        unlink(getcwd().'/assets/images/'.$delete);						
                    }		
                }
            }            
                        
            $this->session->set_flashdata('success','Edit Article Success');    
            redirect('admin/article');
            }
            else
            {                                
                $this->load->view('backend/article/edit_article',$data);
            }
        }
        else {
            $this->session->set_flashdata('error','Article doesnt exist');    
            redirect('admin/article');
        }        
    } 

    /*
     * Deleting user
     */
    function remove($article_id)
    {
        $this->user_library->checking_page_access('article',"article","delete");   
        $where_article['article_id'] = $article_id;                           

        $article = $this->general_model->get_info("*, (CASE WHEN type_article = 1 
        THEN 'berita' WHEN type_article = 2 THEN 'article' ELSE 'serba_serbi' END) as 
        type_article_name", "article", $where_article);
            
        $article_gallery = $this->general_model->get_info("*", "article_gallery", $where_article);                            			        

        // check if the user exists before trying to delete it        
        if($article != FALSE)
        {
            $this->db->trans_start();
            
            $this->db->delete('article',array('article_id'=>$article_id));
            $this->db->delete('article_tags',array('article_id'=>$article_id));
            $this->db->delete('article_gallery',array('article_id'=>$article_id));

            $this->db->trans_complete();
                        
            if(file_exists(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$article->row()->image)) {
                unlink(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$article->row()->image);
            }

            if(file_exists(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$article->row()->image_icon)) {
                unlink(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$article->row()->image_icon);
            }                        

            if($article_gallery != FALSE){
                foreach($article_gallery->result() as $gallery){                    
                    if(file_exists(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$gallery->url)) {
                        unlink(getcwd().'/assets/images/'.$article->row()->type_article_name.'/'.$gallery->url);
                    }
                }
            }

            $this->session->set_flashdata('success','Delete Article Success');                
            redirect('admin/article');
        }
        else {
            $this->session->set_flashdata('error','Delete Article Failed');    
            redirect('admin/article');
        }            
    }

    public function View($id){
        $this->user_library->checking_page_access('article',"article","view");           
        $where_kontak['organization_id'] = 1;                   
        $data['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            

        $join = array();
        $join[0]['table'] = "users u";
        $join[0]['connection'] = "a.created_by = u.usr_id";
        $join[0]['type'] = "left";        

        $join[1]['table'] = "users u2";
        $join[1]['connection'] = "a.reviewed_by = u.usr_id";
        $join[1]['type'] = "left";        

        $join_tags = array();
        $join_tags[0]['table'] = "tags t";
        $join_tags[0]['connection'] = "ats.tags_id = t.tags_id";
        $join_tags[0]['type'] = "left";        

        $where_article['article_id'] = $id;   
        $data['article'] = $this->general_model->get_info("a.*, u.usr_fullname as created_user, 
        (CASE WHEN a.type_article = 1 THEN 'Berita' WHEN a.type_article = 2 THEN 'Artikel' ELSE 
        'Serba - Serbi' END) as type_article_name, u2.usr_fullname as reviewed_user, 
        (CASE WHEN a.media_type = 1 THEN 'Image' ELSE 'Video' END) as media_type_name", "article a", 
        $where_article, array(), $join);

        $data['list_tags'] = $this->general_model->get_info("t.tags_name", "article_tags ats", 
        $where_article, array(), $join_tags)->result();

        $data['list_gallery'] = $this->general_model->get_info("*", "article_gallery", 
        $where_article);

        if($data['article'] != FALSE)
        {
            $this->load->view('backend/article/view_article',$data);
        }else{
            $this->session->set_flashdata('error','Article doesnt exist');    
            redirect('admin/article');
        }		
    }
    
    function review($id)
    {   
        $this->user_library->checking_page_access('article',"article","review");               

        date_default_timezone_set('Asia/Jakarta');

        $where_kontak['organization_id'] = 1;                   
        $data_by_id['kontak'] = $this->general_model->get_info("*", "organization", $where_kontak)->row();                            

        $join = array();
        $join[0]['table'] = "users u";
        $join[0]['connection'] = "a.created_by = u.usr_id";
        $join[0]['type'] = "left";        

        $join[1]['table'] = "users u2";
        $join[1]['connection'] = "a.reviewed_by = u.usr_id";
        $join[1]['type'] = "left";        

        $join_tags = array();
        $join_tags[0]['table'] = "tags t";
        $join_tags[0]['connection'] = "ats.tags_id = t.tags_id";
        $join_tags[0]['type'] = "left";        

        $where_article['article_id'] = $id;   
        $data_by_id['article'] = $this->general_model->get_info("a.*, u.usr_fullname as created_user, 
        (CASE WHEN a.type_article = 1 THEN 'Berita' WHEN a.type_article = 2 THEN 'Artikel' ELSE 
        'Serba - Serbi' END) as type_article_name, u2.usr_fullname as reviewed_user, 
        (CASE WHEN a.media_type = 1 THEN 'Image' ELSE 'Video' END) as media_type_name", "article a", 
        $where_article, array(), $join);

        $data_by_id['list_tags'] = $this->general_model->get_info("t.tags_name", "article_tags ats", 
        $where_article, array(), $join_tags)->result();

        $data_by_id['list_gallery'] = $this->general_model->get_info("*", "article_gallery", 
        $where_article);        
                
        if($data_by_id['article'] != FALSE)
        {
            if($data_by_id['article']->row()->status_review != 0){
                $this->session->set_flashdata('error','This article has been reviewed by another user');                                
                redirect('admin/article/');
            }else if($data_by_id['article']->row()->created_by == $this->session->userdata('user_id')){
                $this->session->set_flashdata('error','You cannot review your article');                                
                redirect('admin/article/');
            }else if(isset($_POST) && count($_POST) > 0)     
            {                                                                   

            $this->db->trans_start();

            $data['status_review'] = $this->input->post('status_review');
            $data['reason_rejection'] = $this->input->post('reason_rejection');
            $data['reviewed_by'] = $this->session->userdata('user_id');
            $data['reviewed_at'] = date('Y-m-d H:i:s');            
            
            $where['article_id'] = $id;

            $this->db->update('article',$data,$where);                      
            $this->db->trans_complete();          

            $status_name = "Approve";
            if($this->input->post('status_review') != 1){
                $status_name = "Decline";
            }
                        
            $this->session->set_flashdata('success', $status_name.' Article Success');                         
            redirect('admin/article');        
            }
            else
            {                        
                $this->load->view('backend/article/review_article',$data_by_id);
            }
        }
        else {
            $this->session->set_flashdata('error','The Article you are trying to Review does not exist.');                                
        redirect('admin/article/');
        }        
    } 
    
}
